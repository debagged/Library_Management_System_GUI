/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.library.ui.student;

import java.awt.*;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.*;

/**
 *
 * @author Layosa
 */
public class ViewBooksTemp extends javax.swing.JFrame {

    /**
     * Creates new form ViewBooksTemp
     */
    public ViewBooksTemp() {
        initComponents();
        addBooksToPanel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                resizeBooksPanel();
            }
        });

        changeScrollBarLook();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundedTextField1 = new custom.components.RoundedTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        booksPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Books");
        setMinimumSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setFocusable(false);
        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(700, 515));
        jScrollPane1.setOpaque(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(700, 0));
        jScrollPane1.setViewportView(booksPanel);

        booksPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        booksPanel.setPreferredSize(new java.awt.Dimension(0, 0));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 15, 15);
        flowLayout1.setAlignOnBaseline(true);
        booksPanel.setLayout(flowLayout1);
        jScrollPane1.setViewportView(booksPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    ArrayList<JPanel> bookPanelsList = new ArrayList<>();
    HashMap<JPanel, JLabel> bookLabelsList = new HashMap<>();
    
    private void addBooksToPanel(){

        File bookCoversFolder = new File("src/main/resources/BookCovers");

        File[] bookCoversFolderFiles = bookCoversFolder.listFiles(File::isFile);
        if(bookCoversFolderFiles != null){
            for(File cover : bookCoversFolderFiles){

                String[] bookDescription = cover.getName().split("[_.]");

                String title = bookDescription[0];
                String author = bookDescription[1];

                /* if(com.mycompany.library.functions.LibraryFunctions.checkIfBorrowed(title, author)){
                    booksPanel.revalidate();
                    booksPanel.repaint();
                    continue;
                } else {
                } */

                ImageIcon origIcon = new ImageIcon(cover.getPath());
                Image scaledIcon = origIcon.getImage().getScaledInstance(160, 230, Image.SCALE_SMOOTH);
                ImageIcon bookCover = new ImageIcon(scaledIcon);
                
                JPanel books = new JPanel();
                books.setPreferredSize(new Dimension(200,300));
                books.setLayout(new FlowLayout(FlowLayout.CENTER,0,10));
                books.setOpaque(true);
                books.setBackground(new Color(255,255,255,0));
                //books.addMouseListener(this);

                JLabel booksLabel = new JLabel();
                booksLabel.setIcon(bookCover);
                booksLabel.setText("<html><div style='text-align: center;'>" + title + "<br><i>" + author + "</i></div></html>");
                booksLabel.setFont(new Font("Serif", Font.BOLD,15));
                booksLabel.setHorizontalTextPosition(JLabel.CENTER);
                booksLabel.setVerticalTextPosition(JLabel.BOTTOM);
                booksLabel.setHorizontalAlignment(JLabel.CENTER);
                booksLabel.setIconTextGap(5);

                books.add(booksLabel);
                booksPanel.add(books);
                
                bookPanelsList.add(books);
                bookLabelsList.put(books,booksLabel);
            }
        }
    }
    
    private void resizeBooksPanel(){
        int bookPanelWidth = 200;
        int bookPanelHeight = 310;

        int containerWidth = jScrollPane1.getViewport().getWidth();
        int containerHeight = jScrollPane1.getViewport().getHeight();
        if (containerWidth == 0) containerWidth = 700; // fallback

        int booksPerRow = containerWidth / bookPanelWidth;
        if (booksPerRow == 0) booksPerRow = 1;

        int rows = (int) Math.ceil((double) bookPanelsList.size() / booksPerRow);
        int heightNeeded = rows * bookPanelHeight + (rows * 10); // spacing

        booksPanel.setPreferredSize(new Dimension(containerWidth, heightNeeded));
        booksPanel.revalidate();
        booksPanel.repaint();

        // Toggle scroll bar visibility based on content height
        if (heightNeeded <= containerHeight) {
            jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        } else {
            jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        }
    }

    private void changeScrollBarLook(){
        javax.swing.JScrollBar verticalBar = jScrollPane1.getVerticalScrollBar();
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(10);
        verticalBar.setUI(new javax.swing.plaf.basic.BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new java.awt.Color(100, 100, 100); // Scroll thumb
                this.trackColor = new java.awt.Color(220, 220, 220);  // Scroll track
            }
            
            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton button = new JButton();
                button.setPreferredSize(new Dimension(0, 0));
                button.setMinimumSize(new Dimension(0, 0));
                button.setMaximumSize(new Dimension(0, 0));
                return button;
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewBooksTemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewBooksTemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewBooksTemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewBooksTemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewBooksTemp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel booksPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private custom.components.RoundedTextField roundedTextField1;
    // End of variables declaration//GEN-END:variables
}
