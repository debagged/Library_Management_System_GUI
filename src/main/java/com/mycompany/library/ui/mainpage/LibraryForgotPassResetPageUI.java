/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.library.ui.mainpage;

import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import com.mycompany.library.users.UserData;

/**
 *
 * @author shawn
 */
public class LibraryForgotPassResetPageUI extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public LibraryForgotPassResetPageUI() {
        initComponents();
        initListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new custom.components.RoundedPanel();
        loginHeader_label = new javax.swing.JLabel();
        newpassword_label = new javax.swing.JLabel();
        password_label = new javax.swing.JLabel();
        confirm_button = new custom.components.CustomRoundedButton();
        logIn_label = new javax.swing.JLabel();
        emptyUnameMessage = new javax.swing.JLabel();
        username_label = new javax.swing.JLabel();
        emptyPassMessage = new javax.swing.JLabel();
        emptyConfirmPassMessage = new javax.swing.JLabel();
        passField = new custom.components.RoundedPasswordField();
        confirmPassField = new custom.components.RoundedPasswordField();
        unameField = new custom.components.RoundedTextField();
        jSeparator1 = new javax.swing.JSeparator();
        mainBackground_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Forgot Password");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(252, 255, 242));
        jPanel2.setMaximumSize(new java.awt.Dimension(24, 24));
        jPanel2.setPreferredSize(new java.awt.Dimension(280, 430));

        loginHeader_label.setBackground(new java.awt.Color(103, 120, 97));
        loginHeader_label.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        loginHeader_label.setForeground(new java.awt.Color(103, 120, 97));
        loginHeader_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginHeader_label.setText("PASSWORD RESET");

        newpassword_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        newpassword_label.setForeground(new java.awt.Color(79, 82, 78));
        newpassword_label.setText("New Password:");

        password_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        password_label.setForeground(new java.awt.Color(79, 82, 78));
        password_label.setText("Confirm Password:");

        confirm_button.setBackground(new java.awt.Color(103, 120, 97));
        confirm_button.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        confirm_button.setForeground(new java.awt.Color(255, 255, 255));
        confirm_button.setText("Confirm");
        confirm_button.setFocusable(false);

        logIn_label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        logIn_label.setForeground(new java.awt.Color(79, 82, 78));
        logIn_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logIn_label.setText("Log In");
        logIn_label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        emptyUnameMessage.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        emptyUnameMessage.setForeground(new java.awt.Color(204, 0, 0));
        emptyUnameMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        username_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        username_label.setForeground(new java.awt.Color(79, 82, 78));
        username_label.setText("Username:");

        emptyPassMessage.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        emptyPassMessage.setForeground(new java.awt.Color(204, 0, 0));
        emptyPassMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        emptyConfirmPassMessage.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        emptyConfirmPassMessage.setForeground(new java.awt.Color(204, 0, 0));
        emptyConfirmPassMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        passField.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(103, 120, 97)), javax.swing.BorderFactory.createEmptyBorder(0, 12, 0, 12)));
        passField.setBorderThickness(2.0F);

        confirmPassField.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(103, 120, 97)), javax.swing.BorderFactory.createEmptyBorder(0, 12, 0, 12)));
        confirmPassField.setBorderThickness(2.0F);

        unameField.setBorderThickness(2.0F);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(loginHeader_label))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(password_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emptyConfirmPassMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(confirmPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirm_button, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logIn_label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(username_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emptyUnameMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(newpassword_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emptyPassMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unameField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(loginHeader_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username_label)
                    .addComponent(emptyUnameMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unameField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newpassword_label)
                    .addComponent(emptyPassMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emptyConfirmPassMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(confirm_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logIn_label)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 290, -1));

        mainBackground_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mainBackground.png"))); // NOI18N
        mainBackground_label.setText("jLabel1");
        getContentPane().add(mainBackground_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initListeners(){

        confirm_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MousePressed(evt);
            }

            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MouseEntered(evt);
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                MouseExited(evt);
            }
        });

        logIn_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MousePressed(evt);
            }
        });

        //declaring methods for focusListener
        java.awt.event.FocusListener fieldFocusListener = new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                FocusLost(evt);
            }
        };

        //adding focus listener to components
        JComponent[] components = {
            unameField, passField, confirmPassField
        };

        for (JComponent comp : components) {
            comp.addFocusListener(fieldFocusListener);
        }
    }

    //method to update border thickness of components on focus
    private void updateBorderThickness(Object source, int thickness) {
        JComponent[] components = {
            unameField, passField, confirmPassField
        };

        for (JComponent comp : components) {
            if (source == comp) {
                if(comp instanceof custom.components.RoundedTextField){
                    ((custom.components.RoundedTextField) comp).setBorderThickness(thickness);
                }

                if(comp instanceof custom.components.RoundedPasswordField){
                    ((custom.components.RoundedPasswordField) comp).setBorderThickness(thickness);
                }
                repaint();
                break;
            }
        }
    }

    public void FocusGained(java.awt.event.FocusEvent evt){
        updateBorderThickness(evt.getSource(), 3);
    }

    public void FocusLost(java.awt.event.FocusEvent evt){
        updateBorderThickness(evt.getSource(), 2);
    }

    private void MouseEntered(java.awt.event.MouseEvent evt) {
        if(evt.getSource()==logIn_label){
            logIn_label.setText("<html><u>Log&nbsp;In</html>");
        }

        if(evt.getSource()==confirm_button){
            confirm_button.setLocation(confirm_button.getX(), confirm_button.getY()-3);
        }
    }

    private void MouseExited(java.awt.event.MouseEvent evt) {
        if(evt.getSource()==logIn_label){
            logIn_label.setText("Log In");
        }

        if(evt.getSource()==confirm_button){
            confirm_button.setLocation(confirm_button.getX(), confirm_button.getY()+3);
        }
    }

    private void showError(JTextField field, JLabel messageLabel, String message) {
        messageLabel.setText(message);
        if (field instanceof custom.components.RoundedTextField){
            ((custom.components.RoundedTextField) field).setBorderThickness(2);
            ((custom.components.RoundedTextField) field).setBorderColor(new java.awt.Color(204, 0, 0));
        }

        if (field instanceof custom.components.RoundedPasswordField){
            ((custom.components.RoundedPasswordField) field).setBorderThickness(2);
            ((custom.components.RoundedPasswordField) field).setBorderColor(new java.awt.Color(204, 0, 0));
        }
    }

    private void MousePressed(java.awt.event.MouseEvent evt) {

        String uname = unameField.getText();
        String pass = String.valueOf(passField.getPassword());
        String confirmPass = String.valueOf(confirmPassField.getPassword());
        emptyUnameMessage.setText(null);
        emptyPassMessage.setText(null);
        emptyConfirmPassMessage.setText(null);
        unameField.setBorderColor(java.awt.Color.decode("#667961"));
        passField.setBorderColor(java.awt.Color.decode("#667961"));
        confirmPassField.setBorderColor(java.awt.Color.decode("#667961"));

        if(evt.getSource()==confirm_button){
            if(uname.isBlank()){
                showError(unameField, emptyUnameMessage, "please enter your username");
                return;
            }

            if(pass.isBlank()){
                showError(passField, emptyPassMessage, "please enter your new password");
                return;
            }

            if(confirmPass.isBlank()){
                showError(confirmPassField, emptyConfirmPassMessage, "please confirm your password");
                return;
            }

            if(uname.equals("admin") || uname.equals("Admin")){
                showError(unameField, emptyUnameMessage, "Invalid Input");
                return;
            }

            if(!pass.equals(confirmPass)){
                showError(passField, emptyPassMessage, "passwords must match");
                showError(confirmPassField, emptyConfirmPassMessage, "passwords must match");
                return;

            } else{

                boolean isPassReset = UserData.resetPassword(uname, confirmPass);
                if(!isPassReset){
                    showError(unameField, emptyUnameMessage, "username not found");
                    return;
                }

                JOptionPane.showMessageDialog(rootPane, "Password successfully reset!");
                unameField.setText(null);
                passField.setText(null);
                confirmPassField.setText(null);
                unameField.requestFocusInWindow();
            }
        }

        if(evt.getSource()==logIn_label){
            this.setVisible(false);
            new com.mycompany.library.ui.mainpage.LibraryLogInPageUI().setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryForgotPassResetPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryForgotPassResetPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryForgotPassResetPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);    
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryForgotPassResetPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new com.mycompany.library.ui.mainpage.LibraryForgotPassResetPageUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private custom.components.RoundedPasswordField confirmPassField;
    private javax.swing.JButton confirm_button;
    private javax.swing.JLabel emptyConfirmPassMessage;
    private javax.swing.JLabel emptyPassMessage;
    private javax.swing.JLabel emptyUnameMessage;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel logIn_label;
    private javax.swing.JLabel loginHeader_label;
    private javax.swing.JLabel mainBackground_label;
    private javax.swing.JLabel newpassword_label;
    private custom.components.RoundedPasswordField passField;
    private javax.swing.JLabel password_label;
    private custom.components.RoundedTextField unameField;
    private javax.swing.JLabel username_label;
    // End of variables declaration//GEN-END:variables
}
