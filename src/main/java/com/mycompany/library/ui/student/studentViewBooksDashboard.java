package com.mycompany.library.ui.student;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.Timer;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;

/**
 *
 * @author shawn
 */
public class studentViewBooksDashboard extends javax.swing.JFrame {

    /**
     * Creates new form studentViewBooksDashboard
     */
    public studentViewBooksDashboard() {
        initComponents();
        cardPanel.add(minimizedPanel, "minimized");
        cardPanel.add(expandedPanel, "extended");
        cardPanel2.add(booksScrollPane, "viewBooks");
        booksScrollPane.setName("viewBooks");
        cardPanel2.add(borrowedBooksScrollPane, "viewBorrowedBooks");
        borrowedBooksScrollPane.setName("viewBorrowedBooks");
        getContentPane().setBackground(java.awt.Color.decode("#91B577"));
        initListeners();
        addBooksToPanel();
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                resizeBooksPanel();
            }
        });

        changeScrollBarLook();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePanel = new javax.swing.JPanel();
        viewBooksButton = new custom.components.RoundedPanel();
        viewBooksLabel = new javax.swing.JLabel();
        viewBorrowedBooksButton = new custom.components.RoundedPanel();
        viewBorrowedLabel = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel();
        minimizedPanel = new javax.swing.JPanel();
        smallLogoLabel = new javax.swing.JLabel();
        expandedPanel = new javax.swing.JPanel();
        olfu_lms_label = new javax.swing.JLabel();
        olfu_logo_label = new javax.swing.JLabel();
        student_label = new javax.swing.JLabel();
        burgerButtonPanel = new custom.components.RoundedPanel();
        burgerButton = new javax.swing.JLabel();
        logOutPanel = new custom.components.RoundedPanel();
        logOutLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        searchBar = new custom.components.RoundedTextField();
        cardPanel2 = new javax.swing.JPanel();
        booksScrollPane = new javax.swing.JScrollPane();
        booksPanel = new javax.swing.JPanel();
        borrowedBooksScrollPane = new javax.swing.JScrollPane();
        borrowedBooksPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Page");
        setBackground(Color.decode("#91B577"));
        setMinimumSize(new java.awt.Dimension(800, 600));

        sidePanel.setBackground(new java.awt.Color(255, 255, 242));
        sidePanel.setPreferredSize(new java.awt.Dimension(75, 156));

        viewBooksButton.setBackground(new java.awt.Color(255, 255, 255));
        viewBooksButton.setBorderThickness(2);
        viewBooksButton.setBorderVisible(true);
        viewBooksButton.setMaximumSize(new java.awt.Dimension(183, 60));
        viewBooksButton.setMinimumSize(new java.awt.Dimension(60, 63));
        viewBooksButton.setPreferredSize(new java.awt.Dimension(60, 63));
        viewBooksButton.setRadius(40);
        viewBooksButton.setVerifyInputWhenFocusTarget(false);

        viewBooksLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        viewBooksLabel.setForeground(new java.awt.Color(79, 82, 78));
        viewBooksLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        viewBooksLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/search_books_icon_SMALL.png"))); // NOI18N
        viewBooksLabel.setIconTextGap(5);
        viewBooksLabel.setPreferredSize(new java.awt.Dimension(130, 40));

        javax.swing.GroupLayout viewBooksButtonLayout = new javax.swing.GroupLayout(viewBooksButton);
        viewBooksButton.setLayout(viewBooksButtonLayout);
        viewBooksButtonLayout.setHorizontalGroup(
            viewBooksButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewBooksButtonLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(viewBooksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        viewBooksButtonLayout.setVerticalGroup(
            viewBooksButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewBooksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        viewBorrowedBooksButton.setBackground(new java.awt.Color(255, 255, 242));
        viewBorrowedBooksButton.setBorderThickness(2);
        viewBorrowedBooksButton.setBorderVisible(false);
        viewBorrowedBooksButton.setMinimumSize(new java.awt.Dimension(60, 63));
        viewBorrowedBooksButton.setPreferredSize(new java.awt.Dimension(60, 63));
        viewBorrowedBooksButton.setRadius(40);

        viewBorrowedLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        viewBorrowedLabel.setForeground(new java.awt.Color(79, 82, 78));
        viewBorrowedLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        viewBorrowedLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/borrow_books_icon_SMALL.png"))); // NOI18N
        viewBorrowedLabel.setIconTextGap(5);
        viewBorrowedLabel.setMaximumSize(new java.awt.Dimension(145, 40));
        viewBorrowedLabel.setMinimumSize(new java.awt.Dimension(145, 40));
        viewBorrowedLabel.setPreferredSize(new java.awt.Dimension(145, 40));

        javax.swing.GroupLayout viewBorrowedBooksButtonLayout = new javax.swing.GroupLayout(viewBorrowedBooksButton);
        viewBorrowedBooksButton.setLayout(viewBorrowedBooksButtonLayout);
        viewBorrowedBooksButtonLayout.setHorizontalGroup(
            viewBorrowedBooksButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewBorrowedBooksButtonLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(viewBorrowedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        viewBorrowedBooksButtonLayout.setVerticalGroup(
            viewBorrowedBooksButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewBorrowedBooksButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(viewBorrowedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cardPanel.setOpaque(false);
        cardPanel.setLayout(new java.awt.CardLayout());

        minimizedPanel.setOpaque(false);

        smallLogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fatima_logo_small.png"))); // NOI18N
        smallLogoLabel.setText("jLabel2");

        javax.swing.GroupLayout minimizedPanelLayout = new javax.swing.GroupLayout(minimizedPanel);
        minimizedPanel.setLayout(minimizedPanelLayout);
        minimizedPanelLayout.setHorizontalGroup(
            minimizedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minimizedPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(smallLogoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        minimizedPanelLayout.setVerticalGroup(
            minimizedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minimizedPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(smallLogoLabel)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        cardPanel.add(minimizedPanel, "card2");

        expandedPanel.setOpaque(false);

        olfu_lms_label.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        olfu_lms_label.setForeground(new java.awt.Color(79, 82, 78));
        olfu_lms_label.setText("OLFU LMS");

        olfu_logo_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/olfu_logo_big.png"))); // NOI18N
        olfu_logo_label.setText("jLabel2");

        student_label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        student_label.setForeground(new java.awt.Color(79, 82, 78));
        student_label.setText("STUDENT");

        javax.swing.GroupLayout expandedPanelLayout = new javax.swing.GroupLayout(expandedPanel);
        expandedPanel.setLayout(expandedPanelLayout);
        expandedPanelLayout.setHorizontalGroup(
            expandedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(expandedPanelLayout.createSequentialGroup()
                .addGroup(expandedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(expandedPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(expandedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(expandedPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(olfu_logo_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(olfu_lms_label)))
                    .addGroup(expandedPanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(student_label)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        expandedPanelLayout.setVerticalGroup(
            expandedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(expandedPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(olfu_lms_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(olfu_logo_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(student_label)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        cardPanel.add(expandedPanel, "card3");

        burgerButtonPanel.setBackground(new Color(0,0,0,0));
        burgerButtonPanel.setBorderVisible(false);
        burgerButtonPanel.setDoubleBuffered(false);
        burgerButtonPanel.setFocusable(false);
        burgerButtonPanel.setRadius(30);
        burgerButtonPanel.setRequestFocusEnabled(false);
        burgerButtonPanel.setVerifyInputWhenFocusTarget(false);

        burgerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/burger_smaller_green.png"))); // NOI18N

        javax.swing.GroupLayout burgerButtonPanelLayout = new javax.swing.GroupLayout(burgerButtonPanel);
        burgerButtonPanel.setLayout(burgerButtonPanelLayout);
        burgerButtonPanelLayout.setHorizontalGroup(
            burgerButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(burgerButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(burgerButton)
                .addContainerGap())
        );
        burgerButtonPanelLayout.setVerticalGroup(
            burgerButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(burgerButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(burgerButton)
                .addContainerGap())
        );

        burgerButton.getAccessibleContext().setAccessibleParent(sidePanel);

        logOutPanel.setBackground(new Color(0,0,0,0));
        logOutPanel.setRadius(30);

        logOutLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        logOutLabel.setForeground(new java.awt.Color(79, 82, 78));
        logOutLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logOutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/logout_green_25x25.png"))); // NOI18N
        logOutLabel.setIconTextGap(8);

        javax.swing.GroupLayout logOutPanelLayout = new javax.swing.GroupLayout(logOutPanel);
        logOutPanel.setLayout(logOutPanelLayout);
        logOutPanelLayout.setHorizontalGroup(
            logOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logOutPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(logOutLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        logOutPanelLayout.setVerticalGroup(
            logOutPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logOutPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logOutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSeparator1.setBackground(new java.awt.Color(103, 120, 97));
        jSeparator1.setForeground(new java.awt.Color(103, 120, 97));

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewBorrowedBooksButton, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(viewBooksButton, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(burgerButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logOutPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14)))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(viewBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewBorrowedBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(burgerButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOutPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        searchBar.setBackground(Color.decode("#91B577"));
        searchBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 15, 0, 15));
        searchBar.setForeground(new java.awt.Color(255, 255, 255));
        searchBar.setBorderColor(java.awt.Color.white);
        searchBar.setBorderRadius(35);
        searchBar.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N

        cardPanel2.setLayout(new java.awt.CardLayout());

        booksScrollPane.setBorder(null);
        booksScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        booksScrollPane.setOpaque(false);
        booksScrollPane.setPreferredSize(new Dimension(cardPanel2.getWidth(), cardPanel2.getHeight()));
        booksScrollPane.setViewportView(booksPanel);

        booksPanel.setBackground(Color.decode("#91B577"));
        booksPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 10));
        booksScrollPane.setViewportView(booksPanel);

        cardPanel2.add(booksScrollPane, "card2");

        borrowedBooksScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout borrowedBooksPanelLayout = new javax.swing.GroupLayout(borrowedBooksPanel);
        borrowedBooksPanel.setLayout(borrowedBooksPanelLayout);
        borrowedBooksPanelLayout.setHorizontalGroup(
            borrowedBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 723, Short.MAX_VALUE)
        );
        borrowedBooksPanelLayout.setVerticalGroup(
            borrowedBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 537, Short.MAX_VALUE)
        );

        borrowedBooksScrollPane.setViewportView(borrowedBooksPanel);

        cardPanel2.add(borrowedBooksScrollPane, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cardPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    ArrayList<JPanel> bookPanelsList = new ArrayList<>();
    HashMap<JPanel, JLabel> bookLabelsList = new HashMap<>();
    private void addBooksToPanel(){

        File bookCoversFolder = new File("src/main/resources/BookCovers");

        File[] bookCoversFolderFiles = bookCoversFolder.listFiles(File::isFile);
        if(bookCoversFolderFiles != null){
            for(File cover : bookCoversFolderFiles){

                String[] bookDescription = cover.getName().split("[_.]");

                String title = bookDescription[0];
                String author = bookDescription[1];

                if(com.mycompany.library.functions.LibraryFunctions.checkIfBorrowed(title, author)){
                    booksPanel.revalidate();
                    booksPanel.repaint();
                    continue;
                } else {
                }

                ImageIcon origIcon = new ImageIcon(cover.getPath());
                Image scaledIcon = origIcon.getImage().getScaledInstance(160, 230, Image.SCALE_SMOOTH);
                ImageIcon bookCover = new ImageIcon(scaledIcon);
                
                custom.components.RoundedPanel books = new custom.components.RoundedPanel();
                books.setPreferredSize(new Dimension(180,300));
                books.setLayout(new FlowLayout(FlowLayout.CENTER,0,10));
                books.setBorderVisible(false);
                books.setOpaque(true);
                books.setBackground(new Color(255,255,255,0));
                books.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                            MouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                            MouseExited(evt);
                        }
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                            MousePressed(evt);
                        }
                });

                JLabel booksLabel = new JLabel();
                booksLabel.setIcon(bookCover);
                booksLabel.setText("<html><div style='text-align: center;'>" + title + "<br><i>" + author + "</i></div></html>");
                booksLabel.setFont(new Font("Serif", Font.BOLD,15));
                booksLabel.setHorizontalTextPosition(JLabel.CENTER);
                booksLabel.setVerticalTextPosition(JLabel.BOTTOM);
                booksLabel.setHorizontalAlignment(JLabel.CENTER);
                booksLabel.setIconTextGap(5);

                books.add(booksLabel);
                booksPanel.add(books);
                
                bookPanelsList.add(books);
                bookLabelsList.put(books,booksLabel);
            }
        }
    }

    private void resizeBooksPanel(){
        int bookPanelWidth = 200;
        int bookPanelHeight = 300;

        int containerWidth = booksScrollPane.getViewport().getWidth();
        int containerHeight = booksScrollPane.getViewport().getHeight();
        if (containerWidth == 0) containerWidth = 700; // fallback

        int booksPerRow = containerWidth / bookPanelWidth;
        if (booksPerRow == 0) booksPerRow = 1;

        int rows = (int) Math.ceil((double) bookPanelsList.size() / booksPerRow);
        int heightNeeded = rows * bookPanelHeight + (rows * 10); // spacing

        booksPanel.setPreferredSize(new Dimension(containerWidth, heightNeeded));
        booksPanel.revalidate();
        booksPanel.repaint();

        // Toggle scroll bar visibility based on content height
        if (heightNeeded <= containerHeight) {
            booksScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        } else {
            booksScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        }
    }
    
    private void changeScrollBarLook(){
        javax.swing.JScrollBar verticalBar = booksScrollPane.getVerticalScrollBar();
        booksScrollPane.getVerticalScrollBar().setUnitIncrement(10);
        verticalBar.setUI(new javax.swing.plaf.basic.BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new java.awt.Color(100, 100, 100); // Scroll thumb
                this.trackColor = new java.awt.Color(220, 220, 220);  // Scroll track
            }
            
            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton button = new JButton();
                button.setPreferredSize(new Dimension(0, 0));
                button.setMinimumSize(new Dimension(0, 0));
                button.setMaximumSize(new Dimension(0, 0));
                return button;
            }
        });
    }
    
    private boolean isExpanded = false;
    private Timer animationTimer;
    private final int COLLAPSED_WIDTH = 75;
    private final int EXPANDED_WIDTH = 200;
    private final int STEP = 10; // pixels per animation frame
    private final int DELAY = 5; // ms between frames

    private void animateSidePanel(boolean currentlyExpanded){
        CardLayout cl = (CardLayout)(cardPanel.getLayout());
        int startWidth = currentlyExpanded ? EXPANDED_WIDTH : COLLAPSED_WIDTH;
        int targetWidth = currentlyExpanded ? COLLAPSED_WIDTH : EXPANDED_WIDTH;
        int direction = currentlyExpanded ? -STEP : STEP;
    
        animationTimer = new Timer(DELAY, null);
        animationTimer.addActionListener(new ActionListener() {
            int width = startWidth;

            public void actionPerformed(ActionEvent e) {
                width += direction;
                if ((direction > 0 && width >= targetWidth) || (direction < 0 && width <= targetWidth)) {
                    width = targetWidth;
                    animationTimer.stop();
                }
    
                sidePanel.setPreferredSize(new Dimension(width, sidePanel.getHeight()));

                String visibleCard = (width > 150) ? "extended" : "minimized";
                cl.show(cardPanel,visibleCard);

                viewBooksLabel.setText((width > 150) ? "View Books" : "");
                viewBorrowedLabel.setText((width > 150) ? "<html>View&nbsp;Borrowed<br>Books</html>" : "");
                logOutLabel.setText((width > 150) ? "Log Out" : "");
                
                sidePanel.revalidate();
                sidePanel.repaint();
            }

        });
    
        animationTimer.start();
    }

    private void highlightButton(JPanel selectedButton) {
        viewBooksButton.setBorderVisible(false);
        viewBorrowedBooksButton.setBorderVisible(false);

        ((custom.components.RoundedPanel) selectedButton).setBorderVisible(true);
    }

    private Component getVisibleCard(Container parent){
        for(Component comp : parent.getComponents()){
            if(comp.isVisible()){
                return comp;
            }
        }
        return null;
    }

    private void initListeners(){

        java.awt.event.MouseAdapter mouseAdapters = new java.awt.event.MouseAdapter(){
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MousePressed(evt);
            }
        };

        JComponent[] components = {
            burgerButton, burgerButtonPanel, viewBooksButton,
            viewBorrowedBooksButton
        };

        for(JComponent comp : components){
            comp.addMouseListener(mouseAdapters);
        }
        
        searchBar.addKeyListener(new KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent e){
                KeyReleased(e);
            }
        });
    }

    private void MouseEntered(java.awt.event.MouseEvent evt){

        for(JPanel panels : bookPanelsList){
            if(evt.getSource()==panels){
                panels.setOpaque(true);
                panels.setBackground(new Color(255,255,255,80));

                panels.getParent().repaint();
            }
        }

        if(evt.getSource()==burgerButton){
            burgerButtonPanel.setBackground(new Color(0,0,0,100));
        }

        if(evt.getSource()==viewBooksButton){
            if(getVisibleCard(cardPanel2).getName().equals("viewBooks")){
                return;
            }
            viewBooksButton.setOpaque(true);
            viewBooksButton.setBackground(new Color(141,181,119,200));
            sidePanel.repaint();
        }

        if(evt.getSource()==viewBorrowedBooksButton){
            if(getVisibleCard(cardPanel2).getName().equals("viewBorrowedBooks")){
                return;
            }
            viewBorrowedBooksButton.setBackground(new Color(141,181,119,200));
            sidePanel.repaint();
        }
    }

    private void MouseExited(java.awt.event.MouseEvent evt){

        for(JPanel panels : bookPanelsList){
            if(evt.getSource()==panels){
                panels.setOpaque(true);
                panels.setBackground(new Color(255,255,255,0));

                panels.getParent().repaint();
            }
        }

        if(evt.getSource()==burgerButton){
            burgerButtonPanel.setBackground(new Color(0,0,0,0));
        }

        if(evt.getSource()==viewBooksButton){
            viewBooksButton.setBackground(new Color(0,0,0,0));
            sidePanel.repaint();
        }

        if(evt.getSource()==viewBorrowedBooksButton){
            viewBorrowedBooksButton.setBackground(new Color(0,0,0,0));
            sidePanel.repaint();
        }
    }

    private void MousePressed(java.awt.event.MouseEvent evt){

        if(evt.getSource() == burgerButton && (animationTimer == null || !animationTimer.isRunning())){
            animateSidePanel(isExpanded);
            isExpanded = !isExpanded;
        }

        for(JPanel book : bookPanelsList){
            if(evt.getSource()==book){
                JLabel bookLabel = bookLabelsList.get(book);
                
                String text = bookLabel.getText().replaceAll("<[^>]*>", "_").trim();

                String[] info = text.split("__");
                String infoLabel = info[1];

                JOptionPane.showMessageDialog(null,"Book Title: " + infoLabel);
            }
        }

        CardLayout cl = (CardLayout) cardPanel2.getLayout();

        if(evt.getSource()==viewBooksButton){
            cl.show(cardPanel2, "viewBooks");
            highlightButton(viewBooksButton);
            sidePanel.revalidate();
            sidePanel.repaint();
        }

        if(evt.getSource()==viewBorrowedBooksButton){
            cl.show(cardPanel2, "viewBorrowedBooks");
            highlightButton(viewBorrowedBooksButton);
            sidePanel.revalidate();
            sidePanel.repaint();
        }

    }

    public void KeyReleased(java.awt.event.KeyEvent e){
        String query = searchBar.getText().toLowerCase();
        for (JPanel panel : bookPanelsList) {
            JLabel label = bookLabelsList.get(panel);
            boolean visible = label.getText().toLowerCase().contains(query);
            panel.setVisible(visible);
        }
        booksPanel.revalidate();
        booksPanel.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(studentViewBooksDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(studentViewBooksDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(studentViewBooksDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(studentViewBooksDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new studentViewBooksDashboard().setVisible(true);
            }
     
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel booksPanel;
    private javax.swing.JScrollPane booksScrollPane;
    private javax.swing.JPanel borrowedBooksPanel;
    private javax.swing.JScrollPane borrowedBooksScrollPane;
    private javax.swing.JLabel burgerButton;
    private custom.components.RoundedPanel burgerButtonPanel;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel cardPanel2;
    private javax.swing.JPanel expandedPanel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel logOutLabel;
    private custom.components.RoundedPanel logOutPanel;
    private javax.swing.JPanel minimizedPanel;
    private javax.swing.JLabel olfu_lms_label;
    private javax.swing.JLabel olfu_logo_label;
    private custom.components.RoundedTextField searchBar;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JLabel smallLogoLabel;
    private javax.swing.JLabel student_label;
    private custom.components.RoundedPanel viewBooksButton;
    private javax.swing.JLabel viewBooksLabel;
    private custom.components.RoundedPanel viewBorrowedBooksButton;
    private javax.swing.JLabel viewBorrowedLabel;
    // End of variables declaration//GEN-END:variables
}
